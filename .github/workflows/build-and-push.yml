name: Build, Push, and SSH to VM to Install Docker

on:
  push:
    branches:
      - main  # Adjust branch as necessary

env:
  ACR_NAME: publicacrdmsnortheurope
  IMAGE_NAME: gettodo
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry (ACR)
        run: |
          az acr login --name $ACR_NAME

      - name: Build Docker image
        run: |
          docker build . -t $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }}

      - name: Push Docker image to ACR
        run: |
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }}

      - name: List Docker images in ACR
        run: |
          az acr repository show-tags --name $ACR_NAME --repository $IMAGE_NAME

  install-docker:
    runs-on: ubuntu-latest
    needs: build-and-push  # Ensures this job runs after the build-and-push job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 13.69.215.70 >> ~/.ssh/known_hosts

      - name: SSH to VM and Install Docker
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no tung@13.69.215.70 << 'EOF'
            echo "Connected to VM successfully!"

            echo "${{ secrets.AZURE_CREDENTIALS }}" > azure_creds.json
            az login --service-principal -u "${{ secrets.AZURE_CLIENT_ID }}" -p "${{ secrets.AZURE_CLIENT_SECRET }}" --tenant "${{ secrets.AZURE_TENANT_ID }}"
            
            # Update package list and install Docker if not already installed
            if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing..."
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
              sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
              sudo apt-get update
              sudo apt install docker-ce
              sudo systemctl start docker
              sudo systemctl enable docker
            else
              echo "Docker is already installed."
            fi

            # Pull the Docker image from ACR
            az acr login --name ${{ env.ACR_NAME }}
            docker pull ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            
            # Stop any existing container and run a new one
            docker stop my_container || true
            docker rm my_container || true
            docker run -d --name my_container -p 80:80 ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          EOF
